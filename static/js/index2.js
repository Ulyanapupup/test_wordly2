const lengthInput = document.getElementById('lengthInput');
const startBtn = document.getElementById('start');
const gameArea = document.getElementById('gameArea');
const userNumberInput = document.getElementById('userNumberInput');
const submitUser  = document.getElementById('submitUser  Number');
const guessInput = document.getElementById('guessInput');
const submitGuessBtn = document.getElementById('submitGuess');
const submitComputerGuessBtn = document.getElementById('submitComputerGuess');
const historyList = document.getElementById('historyList');
const guessDisplay = document.getElementById('guessDisplay');
const computerGuessDisplay = document.getElementById('computerGuessDisplay');

let userSecretNumber = '';
let computerSecretNumber = '';
let numberLength = 4;
let computerGuess = '';

startBtn.addEventListener('click', () => {
    numberLength = parseInt(lengthInput.value, 10);

    if (isNaN(numberLength) || numberLength < 4 || numberLength > 7) {
        alert('–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–±–µ—Ä–∏—Ç–µ –¥–ª–∏–Ω—É –æ—Ç 4 –¥–æ 7.');
        return;
    }

    computerSecretNumber = generateSecretNumber(numberLength);
    console.log('–ó–∞–≥–∞–¥–∞–Ω–Ω–æ–µ —á–∏—Å–ª–æ –∫–æ–º–ø—å—é—Ç–µ—Ä–∞:', computerSecretNumber); // –¥–ª—è –æ—Ç–ª–∞–¥–∫–∏, –º–æ–∂–Ω–æ —É–±—Ä–∞—Ç—å

    historyList.innerHTML = '';
    guessDisplay.innerHTML = '';
    userNumberInput.value = '';
    guessInput.value = '';
    computerGuessDisplay.innerHTML = '';
    gameArea.classList.remove('hidden');

    alert(`–ò–≥—Ä–∞ –Ω–∞—á–∞–ª–∞—Å—å! –£–≥–∞–¥–∞–π—Ç–µ —á–∏—Å–ª–æ –∫–æ–º–ø—å—é—Ç–µ—Ä–∞ –∏–∑ ${numberLength} —Ü–∏—Ñ—Ä. –£–¥–∞—á–∏!`);
    userNumberInput.focus();
});

submitGuessBtn.addEventListener('click', () => {
    const guess = guessInput.value.trim();

    if (guess.length !== numberLength) {
        alert(`–í–≤–µ–¥–∏—Ç–µ —á–∏—Å–ª–æ —Ä–æ–≤–Ω–æ –∏–∑ ${numberLength} —Ü–∏—Ñ—Ä.`);
        return;
    }

    if (!/^\d+$/.test(guess)) {
        alert('–í–≤–µ–¥–∏—Ç–µ —Ç–æ–ª—å–∫–æ —Ü–∏—Ñ—Ä—ã.');
        return;
    }

    // –û—Ç–æ–±—Ä–∞–∑–∏—Ç—å –≤–≤–µ–¥—ë–Ω–Ω–æ–µ —á–∏—Å–ª–æ –≤ —è—á–µ–π–∫–∞—Ö —Å –ø–æ–¥—Å–≤–µ—Ç–∫–æ–π —Å–æ–≤–ø–∞–¥–µ–Ω–∏–π
    displayGuess(guess, guessDisplay, computerSecretNumber);

    // –î–æ–±–∞–≤–∏—Ç—å –≤ –∏—Å—Ç–æ—Ä–∏—é —Å –ø–æ–¥—Å–≤–µ—Ç–∫–æ–π
    displayGuessInHistory(guess, computerSecretNumber);

    if (guess === computerSecretNumber) {
        alert('–ü–æ–∑–¥—Ä–∞–≤–ª—è–µ–º! –í—ã —É–≥–∞–¥–∞–ª–∏ —á–∏—Å–ª–æ –∫–æ–º–ø—å—é—Ç–µ—Ä–∞! üéâ');
        resetGame();
        return;
    }

    // –ö–æ–º–ø—å—é—Ç–µ—Ä –¥–µ–ª–∞–µ—Ç –ø–æ–ø—ã—Ç–∫—É —É–≥–∞–¥–∞—Ç—å —á–∏—Å–ª–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    computerGuess = generateSecretNumber(numberLength);
    displayGuess(computerGuess, computerGuessDisplay, userSecretNumber);
    alert(`–ö–æ–º–ø—å—é—Ç–µ—Ä –ø—ã—Ç–∞–µ—Ç—Å—è —É–≥–∞–¥–∞—Ç—å: ${computerGuess}`);

    if (computerGuess === userSecretNumber) {
        alert('–ö–æ–º–ø—å—é—Ç–µ—Ä —É–≥–∞–¥–∞–ª –≤–∞—à–µ —á–∏—Å–ª–æ! üò±');
        resetGame();
        return;
    }

    guessInput.value = '';
    guessInput.focus();
});

function generateSecretNumber(length) {
    let result = '';
    for (let i = 0; i < length; i++) {
        result += Math.floor(Math.random() * 10);
    }
    return result;
}

function displayGuess(guess, displayElement, secretNumber) {
    displayElement.innerHTML = '';
    const secretNumberArray = secretNumber.split('');
    const guessArray = guess.split('');
    const correctPositions = new Array(secretNumber.length).fill(false);
    const correctDigits = new Array(secretNumber.length).fill(false);

    // –ü–µ—Ä–≤–∞—è –∏—Ç–µ—Ä–∞—Ü–∏—è: –ø—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ –ø—Ä–∞–≤–∏–ª—å–Ω—ã–µ –ø–æ–∑–∏—Ü–∏–∏ (–∑–µ–ª–µ–Ω—ã–π)
    for (let i = 0; i < guessArray.length; i++) {
        const cell = document.createElement('div');
        cell.className = 'number-cell';
        cell.textContent = guessArray[i];

        if (guessArray[i] === secretNumberArray[i]) {
            cell.classList.add('correct');
            correctPositions[i] = true;
            correctDigits[i] = true; // –ü–æ–º–µ—á–∞–µ–º —Ü–∏—Ñ—Ä—É –∫–∞–∫ —É–≥–∞–¥–∞–Ω–Ω—É—é
        }
        displayElement.appendChild(cell);
    }

    // –í—Ç–æ—Ä–∞—è –∏—Ç–µ—Ä–∞—Ü–∏—è: –ø—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ –ø—Ä–∏—Å—É—Ç—Å—Ç–≤–∏–µ —Ü–∏—Ñ—Ä—ã –≤ –∑–∞–≥–∞–¥–∞–Ω–Ω–æ–º —á–∏—Å–ª–µ (–∂–µ–ª—Ç—ã–π)
    for (let i = 0; i < guessArray.length; i++) {
        if (!correctPositions[i]) { // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ç–æ–ª—å–∫–æ —Ç–µ, –∫–æ—Ç–æ—Ä—ã–µ –Ω–µ —É–≥–∞–¥–∞–Ω—ã
            for (let j = 0; j < secretNumberArray.length; j++) {
                if (guessArray[i] === secretNumberArray[j] && !correctDigits[j]) {
                    const cell = displayElement.children[i];
                    cell.classList.add('yellow'); // –î–æ–±–∞–≤–ª—è–µ–º –∂–µ–ª—Ç—É—é –ø–æ–¥—Å–≤–µ—Ç–∫—É
                    correctDigits[j] = true; // –ü–æ–º–µ—á–∞–µ–º —Ü–∏—Ñ—Ä—É –∫–∞–∫ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–Ω—É—é
                    break; // –í—ã—Ö–æ–¥–∏–º –∏–∑ –≤–Ω—É—Ç—Ä–µ–Ω–Ω–µ–≥–æ —Ü–∏–∫–ª–∞
                }
            }
        }
    }
}

function resetGame() {
    userSecretNumber = '';
    computerSecretNumber = '';
    historyList.innerHTML = '';
    guessDisplay.innerHTML = '';
    computerGuessDisplay.innerHTML = '';
    userNumberInput.value = '';
    guessInput.value = '';
    gameArea.classList.add('hidden');
}

function displayGuessInHistory(guess, secretNumber) {
    const row = document.createElement('div');
    row.className = 'history-row'; // –ù–æ–≤—ã–π –∫–ª–∞—Å—Å –¥–ª—è —Å—Ç—Ä–æ–∫–∏ –∏—Å—Ç–æ—Ä–∏–∏
    const secretNumberArray = secretNumber.split('');
    const guessArray = guess.split('');
    const correctPositions = new Array(secretNumber.length).fill(false);
    const correctDigits = new Array(secretNumber.length).fill(false);

    // –ü–µ—Ä–≤–∞—è –∏—Ç–µ—Ä–∞—Ü–∏—è: –ø—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ –ø—Ä–∞–≤–∏–ª—å–Ω—ã–µ –ø–æ–∑–∏—Ü–∏–∏ (–∑–µ–ª–µ–Ω—ã–π)
    for (let i = 0; i < guessArray.length; i++) {
        const cell = document.createElement('span');
        cell.className = 'number-cell';
        cell.textContent = guessArray[i];

        if (guessArray[i] === secretNumberArray[i]) {
            cell.classList.add('correct');
            correctPositions[i] = true;
            correctDigits[i] = true; // –ü–æ–º–µ—á–∞–µ–º —Ü–∏—Ñ—Ä—É –∫–∞–∫ —É–≥–∞–¥–∞–Ω–Ω—É—é
        }
        row.appendChild(cell);
    }

    // –í—Ç–æ—Ä–∞—è –∏—Ç–µ—Ä–∞—Ü–∏—è: –ø—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ –ø—Ä–∏—Å—É—Ç—Å—Ç–≤–∏–µ —Ü–∏—Ñ—Ä—ã –≤ –∑–∞–≥–∞–¥–∞–Ω–Ω–æ–º —á–∏—Å–ª–µ (–∂–µ–ª—Ç—ã–π)
    for (let i = 0; i < guessArray.length; i++) {
        if (!correctPositions[i]) { // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ç–æ–ª—å–∫–æ —Ç–µ, –∫–æ—Ç–æ—Ä—ã–µ –Ω–µ —É–≥–∞–¥–∞–Ω—ã
            for (let j = 0; j < secretNumberArray.length; j++) {
                if (guessArray[i] === secretNumberArray[j] && !correctDigits[j]) {
                    const cell = row.children[i];
                    cell.classList.add('yellow'); // –î–æ–±–∞–≤–ª—è–µ–º –∂–µ–ª—Ç—É—é –ø–æ–¥—Å–≤–µ—Ç–∫—É
                    correctDigits[j] = true; // –ü–æ–º–µ—á–∞–µ–º —Ü–∏—Ñ—Ä—É –∫–∞–∫ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–Ω—É—é
                    break; // –í—ã—Ö–æ–¥–∏–º –∏–∑ –≤–Ω—É—Ç—Ä–µ–Ω–Ω–µ–≥–æ —Ü–∏–∫–ª–∞
                }
            }
        }
    }

    historyList.appendChild(row);
}

